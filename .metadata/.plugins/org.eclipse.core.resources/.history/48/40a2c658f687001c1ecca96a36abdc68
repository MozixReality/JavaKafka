package kafka;

import org.apache.kafka.clients.consumer.*;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;
import java.util.Arrays;
import java.util.Properties;

public class Consumer {
	public static void main(String[] args) {
		final Logger logger = LoggerFactory.getLogger(Consumer.class);
		
		final String bootStrapServers = "127.0.0.1:9092";
		final String consumerGroupID = "java-group-consumer-2";
		
		Properties p = new Properties();
		p.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, bootStrapServers);
		p.setProperty(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());
		p.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());
		p.setProperty(ConsumerConfig.GROUP_ID_CONFIG, consumerGroupID);
		p.setProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");
		
		final KafkaConsumer<String, String> consumer = new KafkaConsumer<String, String>(p);
		
		consumer.subscribe(Arrays.asList("mozixreality"));
		
		
		while(true) {
			ConsumerRecords<String, String> records = consumer.poll(10);
			for (ConsumerRecord record: records) {
				System.out.printf("Received record(key=%s value=%s) %s, %s, %s \n",
		                record.key(), 
		                record.value(),
		                record.topic(),
		                record.partition(),
		                record.offset()
		        );
				logger.info("Received:\n" + 
						"Key: " + record.key() +
						"Value: " + record.key() + 
						"Topic: " + record.topic() + 
						"Partition: " + record.partition() + 
						"Offset: " + record.offset() + "\n"
				);
			}
		}
	}
}
